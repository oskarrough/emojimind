{"version":3,"file":null,"sources":["../src/debug.js","../src/emojimind.js","../src/index.js"],"sourcesContent":["/* global window */\n\nlet method\nlet isDebug = true\n\nif (typeof window === 'undefined') {\n\tisDebug = false\n}\n\n// Allow us to toggle debug statements\nif (isDebug) {\n\tmethod = console.log.bind(window.console)\n} else {\n\tmethod = function () {}\n}\n\nconst debug = method\n\nexport default debug\n","import debug from './debug'\n\nconst em = {}\n\n// Returns a random integer between min (included) and max (excluded)\nem.numberBetween = (min, max) => Math.floor(Math.random() * (max - min)) + min\n\n// Copies an array\nem.copyArray = array => array.map(arr => arr.slice())\n\n// Checks whether an object is empty or not\nem.isEmptyObject = obj => Object.keys(obj).length === 0 && obj.constructor === Object\n\n/**\n Creates a random code\n @param {String/Array} symbols - The symbols used to create the code\n @param {Integer} maxLength - The length of the code\n @return {Array} representing the code\n */\nem.createCode = (symbols, maxLength) => {\n\tlet newCode = []\n\tfor (let i = 0; i < maxLength; i++) {\n\t\tconst random = em.numberBetween(0, symbols.length)\n\t\tnewCode.push(symbols[random])\n\t}\n\treturn newCode\n}\n\n/*\n\tA black is given for each symbol matching both symbol and position in the code.\n\tA white is given if it is the right symbol but in wrong position.\n\n\tExample:\n\n\tgetHints(['1', '2', '3', '4'], ['2', '1', '1', '4'])\n\t\t=> {blacks: 1, whites: 1}\n\n\t@param {Array} code\n\t@param {Array} guess\n\t@return {Object} with the amount of black and white hints\n\t*/\nem.getHints = (code, guess) => {\n\tvar hints = {blacks: 0, whites: 0}\n\tvar skiplist = []\n\tvar skiplist2 = []\n\n\t// Check for black hints\n\tfor (let codeIndex in code) {\n\t\t// eslint guard for-in rule\n\t\tif (!{}.hasOwnProperty.call(guess, codeIndex)) {\n\t\t\tcontinue\n\t\t}\n\t\tif (code[codeIndex] === guess[codeIndex]) {\n\t\t\tdebug(`found black at ${codeIndex}`)\n\t\t\thints.blacks++\n\t\t\tskiplist.push(codeIndex)\n\t\t}\n\t}\n\n\tdebug(`skipping slots: [${skiplist}]`)\n\n\t// Check for white hints\n\tfor (let g in guess) {\n\t\t// eslint guard for-in rule\n\t\tif (!{}.hasOwnProperty.call(guess, g)) {\n\t\t\tcontinue\n\t\t}\n\t\tdebug(`is ${guess[g]} from ${guess} a white in ${code}?`)\n\t\tif (skiplist.includes(g)) {\n\t\t\tdebug(`skiplist ${guess[g]} ${code[g]}`)\n\t\t\tcontinue\n\t\t}\n\t\tfor (let a in code) {\n\t\t\tif (skiplist.includes(a) || skiplist2.includes(a)) {\n\t\t\t\tdebug('- skiplist')\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif (guess[g] === code[a]) {\n\t\t\t\tdebug(`- found a white`)\n\t\t\t\tskiplist2.push(a)\n\t\t\t\thints.whites++\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdebug(`- skip: no match`)\n\t\t}\n\t}\n\treturn hints\n}\n\nexport default em\n\n","/* global window, Vue */\n/* eslint no-alert:0 */\n\nimport em from './emojimind'\n\n// Returns a boolean if the object is emtpy\nVue.filter('isEmptyObject', value => em.isEmptyObject(value))\n\n// Because our 'guess' array contains null values we need to filter them out before we can check the length.\nVue.filter('invalidGuess', (array, max) => {\n\treturn array.filter(v => v).length !== max\n})\n\nVue.component('select-guess', {\n\tprops: ['guess', 'symbols', 'disabled'],\n\ttemplate: `<ul class=\"SelectGuess\">\n\t\t<li v-for=\"char in guess\" track-by=\"$index\">\n\t\t\t<select v-model=\"char\" :disabled=\"disabled\">\n\t\t\t\t<option v-for=\"sym in symbols\" track-by=\"$index\" :value=\"sym\">\n\t\t\t\t\t{{sym}}\n\t\t\t\t</option>\n\t\t\t</select>\n\t\t</li>\n\t</ul>`\n})\n\nexport default new Vue({\n\tel: '#emojimind',\n\tdata: {\n\t\tsymbols: ['1', '2', '3', '4', '5', '6'],\n\t\tcodeLength: 4,\n\t\tmaxGuesses: 10,\n\t\tshowCode: false,\n\t\tcode: [],\n\t\tguesses: []\n\t},\n\tinit() {\n\t\tthis.code = [6, 3, 2, 2]\n\t// let hints = emojimind.getHints([6,3,2,2],[6,2,3,2])\n\t},\n\tcomputed: {\n\t\tbuttonLabel() {\n\t\t\treturn this.code.length ? 'Give me a new code' : 'I am ready. Let me try'\n\t\t}\n\t},\n\tmethods: {\n\t\tnewGame() {\n\t\t\tconsole.log('new game')\n\t\t\tconst code = em.createCode(this.symbols, this.codeLength)\n\t\t\t// console.log(code)\n\t\t\t// this.code = code\n\t\t\tVue.set(this, 'code', code)\n\t\t\tthis.guesses = this.createGuesses()\n\t\t},\n\t\tcreateGuesses() {\n\t\t\tlet guesses = []\n\t\t\tfor (let i = 0; i < this.maxGuesses; i++) {\n\t\t\t\tlet row = {\n\t\t\t\t\tguess: [],\n\t\t\t\t\tpins: {}\n\t\t\t\t}\n\t\t\t\tfor (let k = 0; k < this.codeLength; k++) {\n\t\t\t\t\t// We fill the array with null values to give it a length\n\t\t\t\t\trow.guess.push(null)\n\t\t\t\t}\n\t\t\t\tguesses.push(row)\n\t\t\t}\n\t\t\treturn guesses\n\t\t},\n\t\ttryGuess(index, event) {\n\t\t\tevent.preventDefault()\n\t\t\tconst guess = this.guesses[index].guess\n\t\t\tconst hasTheRightLength = guess.filter(g => g).length === this.codeLength\n\t\t\tif (!hasTheRightLength) {\n\t\t\t\tthrow new Error(`Your guess isn't complete. Does it have ${this.codeLength} symbols?`)\n\t\t\t}\n\t\t\tconst pins = em.getHints(this.code, guess)\n\t\t\tVue.set(this.guesses[index], 'pins', pins)\n\t\t\tconst isLastGuess = index === this.guesses.length - 1\n\t\t\tthis.checkIfWeWon(pins.blacks === this.codeLength, isLastGuess)\n\t\t},\n\t\tcheckIfWeWon(winCondition, isLastGuess) {\n\t\t\tif (winCondition) {\n\t\t\t\tconsole.log('Correct.')\n\t\t\t\twindow.alert('Correct.')\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconsole.log('Wrong.')\n\t\t\tif (isLastGuess) {\n\t\t\t\twindow.alert(`Mwa ha ha, you lose. I am the mastermind. Not you.`)\n\t\t\t}\n\t\t}\n\t}\n})\n"],"names":["method","isDebug","window","console","log","bind","debug","em","numberBetween","min","max","Math","floor","random","copyArray","array","map","arr","slice","isEmptyObject","Object","keys","obj","length","constructor","createCode","symbols","maxLength","newCode","i","push","getHints","code","guess","hints","blacks","whites","skiplist","skiplist2","codeIndex","hasOwnProperty","call","g","includes","a","Vue","filter","value","v","component","codeLength","set","guesses","createGuesses","maxGuesses","row","k","index","event","preventDefault","hasTheRightLength","Error","pins","isLastGuess","checkIfWeWon","winCondition","alert"],"mappings":"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"}